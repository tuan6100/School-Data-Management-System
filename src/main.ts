import { NestFactory } from "@nestjs/core";import { AppModule } from "./app/app.module";import * as process from "node:process";import { FastifyAdapter, NestFastifyApplication } from "@nestjs/platform-fastify";import { readFileSync } from "node:fs";import { join } from "node:path";const port = process.env.PORT?? 3000;const host = process.env.HOST?? "localhost";async function bootstrap() {  const fastifyAdapter = new FastifyAdapter({    logger: true,    http2: true,    https: {      key: readFileSync(join(process.cwd(), "ssl/key.pem")),      cert: readFileSync(join(process.cwd(), "ssl/cert.pem"))    }  });  const app = await NestFactory.create<NestFastifyApplication>(    AppModule,    fastifyAdapter,    {      bufferLogs: true,    },  )  app.enableCors({    origin: [      "https://localhost:3000",      "https://localhost:5173"    ],    credentials: true,    allowedHeaders: ["Content-Type", "Authorization", "Refresh-Token", "Cache-Control", "user-agent", "Access-Control-Allow-Origin"],    exposedHeaders: ["Authorization", "Refresh-Token"]  })  app.getHttpServer()  await app.listen(port, host)}bootstrap().catch(e => console.error(e))